name: Build and Deploy AzUrlShortener

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  # --- AZD Umgebungsname ---
  AZURE_ENV_NAME: AzUrlShortener # Dein AZD-Umgebungsname
  # --- Globale Azure Variablen ---
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }} # <-- HIER GLOBAL HINZUGEFÜGT
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}       # <-- HIER GLOBAL HINZUGEFÜGT (Optional, aber gut)

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Clean up previous builds
        run: dotnet clean src/AzUrlShortener.sln
      - name: Restore dependencies
        run: dotnet restore src/AzUrlShortener.sln
      - name: Build solution
        run: dotnet build src/AzUrlShortener.sln --no-restore --configuration Release

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: Production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 1. Azure Login
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 2. Azure Developer CLI (azd) installieren
      - name: Install Azure Developer CLI
        run: |
          curl -fsSL https://aka.ms/install-azd.sh | bash

      # 3. AZD explizit anmelden
      - name: Login azd with Service Principal
        run: |
          azd auth login --client-id ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }} --client-secret ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }} --tenant-id ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

      # 4. Bereitstellung mit AZD durchführen
      - name: Deploy services using AZD
        working-directory: ./src
        run: azd up --no-prompt # azd sollte jetzt die globale AZURE_SUBSCRIPTION_ID verwenden
        env:
          AZURE_ENV_NAME: ${{ env.AZURE_ENV_NAME }} # Nur noch den Env Name übergeben

      # 5. Azure Logout (Optional)
      - name: Azure Logout
        run: az logout && azd auth logout
